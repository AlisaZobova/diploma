version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    ports:
      - ${FORWARD_ELASTICSEARCH_PORT:-9200}:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - ai-api

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    ports:
      - ${FORWARD_KIBANA_PORT:-5601}:5601
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    depends_on:
      - elasticsearch
    networks:
      - ai-api

  nginx:
      image: 'nginx:alpine'
      networks:
          - ai-api
      ports:
          - '${APP_PORT:-8000}:80'
      volumes:
          - '.:/var/www/html'
          - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf'
          - './docker/nginx/conf.d:/etc/nginx/conf.d'
      depends_on:
          - api
      extra_hosts:
          - "host.docker.internal:host-gateway"
      environment:
          PHP_IDE_CONFIG: "serverName=${SERVER_NAME}"

  api:
      build:
          context: .
          dockerfile: docker/api/Dockerfile
          target: 'local'
      networks:
          - ai-api
      volumes:
          - '.:/var/www/html'
          - './docker/api/php.ini:/usr/local/etc/php/php.ini'
          - './docker/ssh:/home/www/.ssh'
          - './docker/api/.bashrc:/home/www/.bashrc'
      depends_on:
          - mysql
      extra_hosts:
          - "host.docker.internal:host-gateway"
      environment:
          PHP_IDE_CONFIG: "serverName=${SERVER_NAME}"

  mysql:
      image: 'mysql:8.0'
      ports:
          - '${FORWARD_DB_PORT:-3307}:3306'
      environment:
          MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
          MYSQL_DATABASE: '${DB_DATABASE}'
          MYSQL_USER: '${DB_USERNAME}'
          MYSQL_PASSWORD: '${DB_PASSWORD}'
      volumes:
          - 'mysql:/var/lib/mysql'
      networks:
          - ai-api
      healthcheck:
          test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
          retries: 3
          timeout: 5s

volumes:
    mysql:
        driver: local
    elasticsearch:
        driver: local

networks:
    ai-api:
        driver: bridge
